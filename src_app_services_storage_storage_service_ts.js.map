{"version":3,"file":"src_app_services_storage_storage_service_ts.js","mappings":"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","sources":["./src/app/services/storage/storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Auth } from '@angular/fire/auth';\nimport { doc, docData, Firestore, setDoc } from '@angular/fire/firestore';\nimport {\n  getDownloadURL,\n  deleteObject,\n  ref,\n  Storage,\n  uploadString,\n  uploadBytes\n} from '@angular/fire/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor(\n    private auth: Auth,\n    private firestore: Firestore,\n    private storage: Storage\n  ) { }\n\n  getUserProfile() {\n    const user = this.auth.currentUser;\n    const userDocRef = doc(this.firestore, `users/${user.uid}`);\n    return docData(userDocRef, { idField: 'id' });\n  }\n\n  async uploadCourse(cameraFile: any) {\n    const user = this.auth.currentUser;\n    const path = `uploads/${user.uid}/profile.png`;\n    const storageRef = ref(this.storage, path);\n\n    try {\n      await uploadString(storageRef, cameraFile.base64String, 'base64');\n\n      const imageUrl = await getDownloadURL(storageRef);\n\n      const userDocRef = doc(this.firestore, `users/${user.uid}`);\n      await setDoc(userDocRef, {\n        imageUrl,\n      });\n      return true;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  async uploadReview(data: any) {\n    const user = this.auth.currentUser;\n    const path = `uploads/reviews/${data.name}`;\n    const storageRef = ref(this.storage, path);\n    try {\n      await uploadBytes(storageRef, data.file);\n      const fileURL = await getDownloadURL(storageRef);\n      return { file_url: fileURL };\n    } catch (e) {\n      return { error: e };\n    }\n  }\n\n  async pushFileToStorage(data: any, filePath: string = undefined) {\n\n    const user = this.auth.currentUser;\n    const path = filePath ? filePath : `uploads/test/${data.name}`;\n    const storageRef = ref(this.storage, path);\n\n    try {\n      await uploadBytes(storageRef, data.file);\n\n      const fileURL = await getDownloadURL(storageRef);\n\n      // const testDocRef = doc(this.firestore, `tests/${data.test_id}`);\n      // await setDoc(testDocRef, { file_url: fileURL, updated_at: serverTimestamp() });\n      return { file_url: fileURL };\n    } catch (e) {\n      return { error: e };\n    }\n  }\n\n  async deleteFile(path: string) {\n    const storageRef = ref(this.storage, path);\n    deleteObject(storageRef).then((resp) => resp).catch((error) => error);\n  }\n}\n"],"names":["Injectable","Auth","doc","docData","Firestore","setDoc","getDownloadURL","deleteObject","ref","Storage","uploadString","uploadBytes","StorageService","constructor","auth","firestore","storage","getUserProfile","user","currentUser","userDocRef","uid","idField","uploadCourse","cameraFile","path","storageRef","base64String","imageUrl","e","uploadReview","data","name","file","fileURL","file_url","error","pushFileToStorage","filePath","undefined","deleteFile","then","resp","catch","providedIn"],"sourceRoot":"webpack:///"}